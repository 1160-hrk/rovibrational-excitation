#!/usr/bin/env python
"""
rovibrational-excitation パラメータファイル テンプレート
========================================================

このファイルをコピーして、自分のシミュレーション用にカスタマイズしてください。

使用方法:
    1. このファイルをコピー: cp params_template.py my_params.py
    2. 必要な部分を編集
    3. 実行: python -m rovibrational_excitation.simulation.runner my_params.py

詳細: docs/PARAMETER_REFERENCE.md を参照
"""
import numpy as np

# ============================================================================
# 1. メタ情報（推奨）
# ============================================================================
description = "template_simulation"  # 結果ディレクトリ名にも使用

# ============================================================================
# 2. 必須パラメータ - 時間軸設定
# ============================================================================
# 時間軸の範囲と刻み（単位: fs）
# ヒント: 計算時間を短くするには範囲を狭く、精度を上げるには刻みを細かく
t_start = -50.0    # 開始時刻 [fs]
t_end = 50.0       # 終了時刻 [fs]  
dt = 0.1           # 時間刻み [fs] - 通常 0.05～0.2

# ============================================================================
# 3. 必須パラメータ - 量子系設定
# ============================================================================
# 基底サイズ（計算時間・メモリに大きく影響）
# ヒント: 最初は小さな値で試して、必要に応じて増やす
V_max = 3          # 最大振動量子数 - 通常 2～10
J_max = 5          # 最大回転量子数 - 通常 2～20

# オプション: 磁気量子数を使用するか（デフォルト: True）
# use_M = True

# ============================================================================
# 4. 必須パラメータ - 物理パラメータ
# ============================================================================
# 分子の物理定数
# 例: CO2分子のν3振動モード
omega_rad_phz = 2349 * 2 * np.pi * 3e10 / 1e15  # 振動周波数 [rad/fs]
mu0_Cm = 0.3 * 3.33564e-30                      # 双極子モーメント [C·m] (~0.3 Debye)

# オプション: より詳細な分子パラメータ
# delta_omega_rad_phz = 0.001 * omega_rad_phz    # 非調和性
# B_rad_phz = 0.39 * 2 * np.pi * 3e10 / 1e15     # 回転定数
# alpha_rad_phz = 0.0001 * B_rad_phz              # 振動-回転相互作用

# ============================================================================
# 5. 必須パラメータ - 電場設定
# ============================================================================
# 基本レーザーパルス設定
duration = 20.0                    # パルス幅（FWHM） [fs]
t_center = 0.0                     # パルス中心時刻 [fs]
carrier_freq = omega_rad_phz       # キャリア周波数 [rad/fs] - 通常は共鳴周波数
amplitude = 1e9                    # 電場振幅 [V/m] - 1e8～1e12の範囲

# 偏光設定（固定値キー - リストでもスイープされない）
polarization = [1.0, 0.0]          # [x, y] 偏光ベクトル - (1,0)=x偏光, (0,1)=y偏光

# オプション: 高度な電場設定
# envelope_func = gaussian_fwhm      # 包絡線関数（デフォルト）
# phase_rad = 0.0                    # キャリア位相 [rad]
# gdd = 0.0                          # 群遅延分散（2次） [fs²]
# tod = 0.0                          # 群遅延分散（3次） [fs³]

# ============================================================================
# 6. 必須パラメータ - 初期状態
# ============================================================================
# 初期状態の指定（固定値キー）
initial_states = [0]               # [0] = 基底状態のみ

# 複数状態の重ね合わせ例:
# initial_states = [0, 1, 2]        # v=0,1,2 の重ね合わせ

# ============================================================================
# 7. オプションパラメータ - 計算設定
# ============================================================================
# 計算バックエンド
backend = "numpy"                  # "numpy" または "cupy"（GPU）

# 行列形式
dense = True                       # True=密行列（高速）, False=スパース行列（省メモリ）

# その他の計算設定
axes = "xy"                        # 電場-双極子の軸対応
sample_stride = 1                  # サンプリング間隔（メモリ節約用）

# ============================================================================
# 8. オプションパラメータ - 出力設定  
# ============================================================================
# 結果の保存・出力設定
save = True                        # 結果を保存するか
# outdir = "/custom/output/path"   # カスタム出力ディレクトリ（デフォルト: 自動生成）

# 軌跡・時間配列の出力
return_traj = True                 # 軌跡を返すか
return_time_psi = True             # 時間配列も返すか

# ============================================================================
# 9. スイープ設定の例（オプション）
# ============================================================================
# 異なる条件での比較をしたい場合、以下のようにスイープを設定

# 例1: 従来のスイープ（リストの長さで判定）
# duration = [10.0, 20.0, 30.0]     # 3ケース

# 例2: 明示的スイープ（_sweep接尾辞）
# amplitude_sweep = [1e8, 5e8, 1e9] # 3ケース → 'amplitude' として保存

# 例3: 組み合わせスイープ
# duration = [10.0, 20.0]           # 2ケース
# amplitude_sweep = [1e8, 1e9]      # 2ケース → 合計 2×2 = 4ケース

# 注意: polarization, initial_states, envelope_func は常に固定値として扱われます

# ============================================================================
# 参考情報
# ============================================================================
"""
よく使われる物理定数・単位変換:

【周波数変換】
- cm⁻¹ → rad/fs: wavenumber * 2π * 3e10 / 1e15
- THz → rad/fs: freq_THz * 2π * 1000
- eV → rad/fs: energy_eV * 1.519e6

【双極子モーメント変換】  
- Debye → C·m: dipole_D * 3.33564e-30

【典型的な値】
- CO2 ν3: 2349 cm⁻¹
- CO2 双極子: ~0.3 Debye
- レーザー強度: 1e8～1e12 V/m
- パルス幅: 5～100 fs

【計算サイズの目安】
- 軽量（V_max=2, J_max=2）: 数秒～数分
- 中程度（V_max=5, J_max=10）: 数分～数時間  
- 大規模（V_max=10, J_max=20）: 数時間～数日

詳細は docs/PARAMETER_REFERENCE.md を参照してください。
"""
